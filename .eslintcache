[{"C:\\reactProject\\groupchat\\src\\index.js":"1","C:\\reactProject\\groupchat\\src\\reportWebVitals.js":"2","C:\\reactProject\\groupchat\\src\\App.js":"3","C:\\reactProject\\groupchat\\src\\components\\Header.js":"4","C:\\reactProject\\groupchat\\src\\components\\Message.js":"5","C:\\reactProject\\groupchat\\src\\components\\SubmitMessage.js":"6","C:\\reactProject\\groupchat\\src\\testData.js":"7","C:\\reactProject\\groupchat\\src\\components\\GetMessages.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":3235,"mtime":1609608566272,"results":"12","hashOfConfig":"10"},{"size":546,"mtime":1609192850834,"results":"13","hashOfConfig":"10"},{"size":2390,"mtime":1609610976369,"results":"14","hashOfConfig":"10"},{"size":1442,"mtime":1609192850842,"results":"15","hashOfConfig":"10"},{"size":1610,"mtime":1609192850847,"results":"16","hashOfConfig":"10"},{"size":1288,"mtime":1609609654683,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"h9pzy9",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},"C:\\reactProject\\groupchat\\src\\index.js",[],["37","38"],"C:\\reactProject\\groupchat\\src\\reportWebVitals.js",[],"C:\\reactProject\\groupchat\\src\\App.js",["39","40","41"],"import './App.css';\r\nimport firebase from 'firebase/app';\r\nimport \"firebase/firestore\"\r\nimport \"firebase/auth\"\r\n\r\nimport { useAuthState } from \"react-firebase-hooks/auth\"\r\n\r\n// Components\r\nimport Header from \"./components/Header\"\r\nimport SubmitMessage from \"./components/SubmitMessage\"\r\nimport GetMessages from \"./components/GetMessages\"\r\n\r\n// Images\r\nimport logout from './images/logout.png';\r\nimport Google from './images/google.png';\r\nimport GoogleLogo from './images/googleLogo.png';\r\n\r\nconst TEST_MESSAGES = false\r\nconst ENABLE_SUBMIT = true\r\n\r\n\r\n\r\n// Firebase config credentials (declared in .env)\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_SENDER_ID,\r\n  appId: process.env.REACT_APP_ID,\r\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID\r\n}\r\n\r\n// Connect to Firebase db\r\nfirebase.initializeApp(firebaseConfig)\r\nconst auth = firebase.auth()\r\nconst firestore = firebase.firestore()\r\n\r\n\r\n\r\nfunction SignIn() {\r\n  const signInWithGoogle = () => {\r\n    const provider = new firebase.auth.GoogleAuthProvider()\r\n    auth.signInWithPopup(provider).then(token => {\r\n      // Save logins for all users\r\n      const { user } = token \r\n      const addUser = (async () => {\r\n        const collectionName = firestore.collection(\"users\")\r\n        await collectionName.add({\r\n          uid: user.uid,\r\n          name: user.displayName,\r\n          photoURL: user.photoURL,\r\n          email: user.email,\r\n          time: firebase.firestore.FieldValue.serverTimestamp()\r\n        })\r\n      })()\r\n    })\r\n  }\r\n  return (\r\n    <img \r\n      className=\"google-signin contariner\"\r\n      onClick={signInWithGoogle}\r\n      src={GoogleLogo}\r\n      alt=\"Sign in with google\"/>\r\n  )\r\n}\r\n\r\nfunction SignOut() {\r\n  const signOutFromGoogle = () => {\r\n    if (auth.currentUser) {\r\n      auth.signOut()\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <img\r\n      className=\"logout-pic\"\r\n      src={logout}\r\n      alt=\":)\"\r\n      onClick={signOutFromGoogle}\r\n    /> \r\n  )\r\n}\r\n\r\nfunction sendMessage(text) {\r\n  const msg = text.trim()\r\n  if (msg === \"\") {\r\n    console.log(\"Message is empty\")\r\n  }\r\n  else {\r\n    if (!ENABLE_SUBMIT) {\r\n      alert(\"Test mode on\")\r\n    } else {\r\n      const addMessage = (async () => {\r\n        const collectionName = firestore.collection(\"messages\")\r\n        const user = auth.currentUser\r\n    \r\n        await collectionName.add({\r\n          message: msg,\r\n          userID: user.uid,\r\n          time: firebase.firestore.FieldValue.serverTimestamp(),\r\n          photoURL: user.photoURL,\r\n          name: user.displayName\r\n        })\r\n      })()\r\n    }\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  const [user] = useAuthState(auth)\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header user={user} signOut={<SignOut />} />  \r\n      {user == null && <SignIn /> }\r\n      <div className=\"contariner\"></div>\r\n      {user && <GetMessages\r\n        user={user}\r\n        firestore={firestore}\r\n        test_messages={TEST_MESSAGES}/> }\r\n      {user && <SubmitMessage sendMsg={sendMessage}/> }\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","C:\\reactProject\\groupchat\\src\\components\\Header.js",[],"C:\\reactProject\\groupchat\\src\\components\\Message.js",[],"C:\\reactProject\\groupchat\\src\\components\\SubmitMessage.js",[],"C:\\reactProject\\groupchat\\src\\testData.js",[],"C:\\reactProject\\groupchat\\src\\components\\GetMessages.js",["42","43"],"import React from \"react\"\r\nimport { useCollectionData } from \"react-firebase-hooks/firestore\"\r\n\r\n// Components\r\nimport Message from \"./Message\"\r\n\r\n// test data\r\nimport testData from '../testData'\r\n\r\nfunction GetMessages(props) {\r\n    const TEST_MESSAGES = props.test_messages\r\n    const firestore = props.firestore\r\n    const user = props.user\r\n\r\n    let messages = [];\r\n    const messageID = firestore.collection(\"messages\")\r\n    //console.log(\"MsgID:\", messageID)\r\n\r\n    const query = messageID.orderBy(\"time\", \"desc\").limit(20)\r\n\r\n    messages = useCollectionData(query,  {idField: \"id\"})\r\n  \r\n    let showContent = null\r\n    if (messages[0] !== undefined) {\r\n      const len = messages[0].length\r\n      showContent = messages[0].reverse().map((msg, i) => {\r\n        const isMe = user && user.uid === msg.userID\r\n        const last = (i + 1 === len) ? \"last-msg\" : \"\"\r\n        const msgPic = msg.photoURL\r\n  \r\n        return (\r\n          <Message\r\n            key={Math.random()}\r\n            msg={msg.message}\r\n            isMe={isMe}\r\n            time={msg.time}\r\n            photoURL={msgPic}\r\n            last={last}\r\n            name={msg.name}\r\n          />\r\n        )\r\n      })\r\n    }\r\n  \r\n    return (\r\n      <div>{ showContent }</div>\r\n    )\r\n  }\r\n\r\nexport default GetMessages",{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":15,"column":8,"nodeType":"50","messageId":"51","endLine":15,"endColumn":14},{"ruleId":"48","severity":1,"message":"52","line":47,"column":13,"nodeType":"50","messageId":"51","endLine":47,"endColumn":20},{"ruleId":"48","severity":1,"message":"53","line":94,"column":13,"nodeType":"50","messageId":"51","endLine":94,"endColumn":23},{"ruleId":"48","severity":1,"message":"54","line":8,"column":8,"nodeType":"50","messageId":"51","endLine":8,"endColumn":16},{"ruleId":"48","severity":1,"message":"55","line":11,"column":11,"nodeType":"50","messageId":"51","endLine":11,"endColumn":24},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'Google' is defined but never used.","Identifier","unusedVar","'addUser' is assigned a value but never used.","'addMessage' is assigned a value but never used.","'testData' is defined but never used.","'TEST_MESSAGES' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]